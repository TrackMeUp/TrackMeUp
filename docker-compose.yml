services:
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    env_file:
      - ./frontend/.env
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      backend:
        condition: service_healthy

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    env_file:
      - ./backend/.env
    ports:
      - "3000:3000"
    environment:
      # Overrides MYSQL_HOST in ./backend/.env to connect backend to db.
      - MYSQL_HOST=db
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      start_period: 20s
      interval: 10s
      retries: 3
      timeout: 5s

  db:
    container_name: db
    image: mysql:8.4.4
    restart: unless-stopped
    env_file:
      - ./backend/.env
    ports:
      - "3306:3306"
    volumes:
      - db-data:/var/lib/mysql
      - ./backend/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root --password=$$MYSQL_ROOT_PASSWORD"]
      start_period: 30s
      interval: 10s
      retries: 5
      timeout: 5s

volumes:
  db-data:
